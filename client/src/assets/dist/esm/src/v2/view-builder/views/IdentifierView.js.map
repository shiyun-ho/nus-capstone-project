{"version":3,"file":"IdentifierView.js","sources":["../../../../../../src/v2/view-builder/views/IdentifierView.js"],"sourcesContent":["import { loc, createCallout } from '@okta/courage';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { BaseForm, BaseView, createIdpButtons, createCustomButtons } from '../internals';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting';\nimport IdentifierFooter from '../components/IdentifierFooter';\nimport Link from '../components/Link';\nimport signInWithIdps from './signin/SignInWithIdps';\nimport customButtonsView from './signin/CustomButtons';\nimport signInWithDeviceOption from './signin/SignInWithDeviceOption';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn';\nimport { isCustomizedI18nKey } from '../../ion/i18nTransformer';\nimport { getForgotPasswordLink } from '../utils/LinksUtil';\nimport CookieUtil from 'util/CookieUtil';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage';\n\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\n\n\nconst Body = BaseForm.extend({\n\n  title() {\n    return loc('primaryauth.title', 'login');\n  },\n\n  save() {\n    return loc('oform.next', 'login');\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    }\n\n    // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there)\n    // 3. Use value from the \"remember my username\" cookie.\n    if(this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n\n  saveForm() {\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    }\n\n    // Before the XHR is made for \"identify\", we'll generate this one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n    const fingerprintData = {\n      oktaDomainUrl: this.settings.get('baseUrl'),\n      element: this.$el,\n    };\n\n    // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    // In the future, this should be handled completely by okta-auth-js OKTA-418160\n    DeviceFingerprinting.generateDeviceFingerprint(fingerprintData)\n      .then(fingerprint => {\n        this.options.appState.set('deviceFingerprint', fingerprint);\n      })\n      .catch(() => { /* Keep going even if device fingerprint fails */ })\n      .finally(() => {\n        BaseForm.prototype.saveForm.apply(this, arguments);\n      });\n  },\n\n  render() {\n    BaseForm.prototype.render.apply(this, arguments);\n\n    // Launch Device Authenticator\n    if (this.options.appState.hasRemediationObject(RemediationForms.LAUNCH_AUTHENTICATOR)) {\n      this.add(signInWithDeviceOption, '.o-form-fieldset-container', false, true, { isRequired: false });\n    }\n\n    if (this.options.appState.hasRemediationObject(RemediationForms.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, { isRequired: false });\n    }\n\n    // add forgot password link and external idps buttons if needed\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons,\n          addSeparateLine: true,\n        }\n      });\n    }\n  },\n\n  postRender() {\n    BaseForm.prototype.postRender.apply(this, arguments);\n    // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n    this.$el.find('.identifier-container').remove();\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema() {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const { settings } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n\n    let newSchemas = schemas.map(schema => {\n      let newSchema = { ...schema };\n\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n\n        // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'username'\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'current-password'\n        };\n\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n      }\n\n      return newSchema;\n    });\n\n    // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n\n    return newSchemas;\n  },\n\n  showCustomFormErrorCallout(error, messages) {\n    if (!error?.responseJSON?.errorSummaryKeys?.includes(CUSTOM_ACCESS_DENIED_KEY)) {\n      return false;\n    }\n\n    const message = messages.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n    if (!message) {\n      return false;\n    }\n\n    const { errorSummary } = error.responseJSON;\n\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links,\n      }),\n    };\n\n    this.showMessages(createCallout(options));\n    return true;\n  },\n\n  _addForgotPasswordView() {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', { selector: '.o-form-button-bar' });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0],\n      });\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons\n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n\n  _shouldAddUsername(uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return (uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username'));\n  },\n\n  _shouldApplyRememberMyUsername(uiSchema) {\n    return (uiSchema.find(schema => schema.name === 'identifier')\n        && this.settings.get('features.rememberMe'));\n  },\n\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername() {\n    const cookieUsername = CookieUtil.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n\n    // customize pre-submit form validation inline error messages\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = (attr) => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !attr?.['identifier'];\n      const isEmptyPassword = props['credentials.passcode'] && !attr?.['credentials.passcode'];\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n\n    return ModelClass.extend({\n      validate\n    });\n  },\n\n  initialize() {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return (!this.options.appState.isIdentifierOnlyView() &&\n          (!Array.isArray(idpButtons) || idpButtons.length === 0));\n      }\n    });\n  },\n\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function() {\n      appState.trigger('invokeAction', RemediationForms.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  },\n});\n"],"names":["CUSTOM_ACCESS_DENIED_KEY","Body","BaseForm","extend","title","loc","save","initialize","prototype","apply","arguments","uiSchema","getUISchema","find","schema","name","_shouldAddUsername","model","set","settings","get","_shouldApplyRememberMyUsername","_applyRememberMyUsername","saveForm","fingerprintData","oktaDomainUrl","element","$el","DeviceFingerprinting","generateDeviceFingerprint","then","fingerprint","options","appState","catch","finally","render","hasRemediationObject","RemediationForms","LAUNCH_AUTHENTICATOR","add","signInWithDeviceOption","isRequired","LAUNCH_WEBAUTHN_AUTHENTICATOR","signInWithWebAuthn","idpButtons","createIdpButtons","Array","isArray","length","_addForgotPasswordView","_addIdpView","customButtons","createCustomButtons","customButtonsView","selector","addSeparateLine","postRender","remove","schemas","identifierExplainLabeli18nKey","passwordExplainLabeli18nKey","newSchemas","map","newSchema","isCustomizedI18nKey","explain","autoComplete","filter","showCustomFormErrorCallout","error","messages","responseJSON","errorSummaryKeys","includes","message","i18n","key","errorSummary","type","content","CustomAccessDeniedErrorMessage","links","showMessages","createCallout","forgotPasswordLink","getForgotPasswordLink","Link","idpDisplay","isPrimaryIdpDisplay","toUpperCase","signInWithIdps","prepend","cookieUsername","CookieUtil","getCookieUsername","BaseView","createModelClass","ModelClass","identifierRequiredi18nKey","passwordRequiredi18nKey","props","validate","attr","inlineErrors","isEmptyIdentifier","isEmptyPassword","Footer","IdentifierFooter","showForgotPasswordLink","isIdentifierOnlyView","click","trigger","SELECT_ENROLL_PROFILE"],"mappings":"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"}